{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/ConfigApi",
  "definitions": {
    "ConfigApi": {
      "type": "object",
      "properties": {
        "GET": {
          "type": "object",
          "properties": {
            "/config": {
              "$ref": "#/definitions/GetCollectionEndpoint%3CConfig%3E"
            },
            "/config/:id": {
              "$ref": "#/definitions/GetEntityEndpoint%3CConfig%2C%22id%22%3E"
            }
          },
          "required": ["/config", "/config/:id"],
          "additionalProperties": false
        },
        "POST": {
          "type": "object",
          "properties": {
            "/config": {
              "$ref": "#/definitions/PostEndpoint%3CConfig%2C%22id%22%2CPick%3CConfig%2C(%22id%22%7C%22value%22)%3E%3E"
            }
          },
          "required": ["/config"],
          "additionalProperties": false
        },
        "PATCH": {
          "type": "object",
          "properties": {
            "/config/:id": {
              "$ref": "#/definitions/PatchEndpoint%3CConfig%2C%22id%22%3E"
            }
          },
          "required": ["/config/:id"],
          "additionalProperties": false
        },
        "PUT": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": ["result"],
            "additionalProperties": false
          }
        },
        "DELETE": {
          "type": "object",
          "properties": {
            "/config/:id": {
              "$ref": "#/definitions/DeleteEndpoint%3CConfig%2C%22id%22%3E"
            }
          },
          "required": ["/config/:id"],
          "additionalProperties": false
        },
        "HEAD": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": ["result"],
            "additionalProperties": false
          }
        },
        "CONNECT": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": ["result"],
            "additionalProperties": false
          }
        },
        "TRACE": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": ["result"],
            "additionalProperties": false
          }
        },
        "OPTIONS": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": ["result"],
            "additionalProperties": false
          }
        }
      },
      "required": ["GET", "POST", "PATCH", "DELETE"],
      "additionalProperties": false
    },
    "GetCollectionEndpoint<Config>": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {
            "findOptions": {
              "$ref": "#/definitions/FindOptions%3CConfig%2C(%22id%22%7C%22value%22%7C%22createdAt%22%7C%22updatedAt%22)%5B%5D%3E"
            }
          },
          "additionalProperties": false
        },
        "result": {
          "$ref": "#/definitions/GetCollectionResult%3CConfig%3E"
        }
      },
      "required": ["query", "result"],
      "additionalProperties": false,
      "description": "Rest endpoint model for getting / querying collections"
    },
    "FindOptions<Config,(\"id\"|\"value\"|\"createdAt\"|\"updatedAt\")[]>": {
      "type": "object",
      "properties": {
        "top": {
          "type": "number",
          "description": "Limits the hits"
        },
        "skip": {
          "type": "number",
          "description": "Skips the first N hit"
        },
        "order": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "enum": ["ASC", "DESC"]
            },
            "value": {
              "type": "string",
              "enum": ["ASC", "DESC"]
            },
            "createdAt": {
              "type": "string",
              "enum": ["ASC", "DESC"]
            },
            "updatedAt": {
              "type": "string",
              "enum": ["ASC", "DESC"]
            }
          },
          "additionalProperties": false,
          "description": "Sets up an order by a field and a direction"
        },
        "select": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["id", "value", "createdAt", "updatedAt"]
          },
          "description": "The result set will be limited to these fields"
        },
        "filter": {
          "$ref": "#/definitions/FilterType%3CConfig%3E",
          "description": "The fields should match this filter"
        }
      },
      "additionalProperties": false,
      "description": "Type for default filtering model"
    },
    "FilterType<Config>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "$and": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CConfig%3E"
          }
        },
        "$not": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CConfig%3E"
          }
        },
        "$nor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CConfig%3E"
          }
        },
        "$or": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CConfig%3E"
          }
        },
        "id": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "OMDB_CONFIG",
                      "description": "Configuration entry for the OMDB API"
                    },
                    {
                      "type": "string",
                      "const": "GITHUB_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "TORRENT_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "IOT_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "MOVIES_CONFIG"
                    }
                  ],
                  "description": "Configuration entry for the OMDB API"
                },
                "$endsWith": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "OMDB_CONFIG",
                      "description": "Configuration entry for the OMDB API"
                    },
                    {
                      "type": "string",
                      "const": "GITHUB_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "TORRENT_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "IOT_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "MOVIES_CONFIG"
                    }
                  ],
                  "description": "Configuration entry for the OMDB API"
                },
                "$like": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "OMDB_CONFIG",
                      "description": "Configuration entry for the OMDB API"
                    },
                    {
                      "type": "string",
                      "const": "GITHUB_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "TORRENT_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "IOT_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "MOVIES_CONFIG"
                    }
                  ],
                  "description": "Configuration entry for the OMDB API"
                },
                "$regex": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "OMDB_CONFIG",
                      "description": "Configuration entry for the OMDB API"
                    },
                    {
                      "type": "string",
                      "const": "GITHUB_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "TORRENT_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "IOT_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "MOVIES_CONFIG"
                    }
                  ],
                  "description": "Configuration entry for the OMDB API"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "OMDB_CONFIG",
                      "description": "Configuration entry for the OMDB API"
                    },
                    {
                      "type": "string",
                      "const": "GITHUB_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "TORRENT_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "IOT_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "MOVIES_CONFIG"
                    }
                  ],
                  "description": "Configuration entry for the OMDB API"
                },
                "$ne": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "OMDB_CONFIG",
                      "description": "Configuration entry for the OMDB API"
                    },
                    {
                      "type": "string",
                      "const": "GITHUB_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "TORRENT_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "IOT_CONFIG"
                    },
                    {
                      "type": "string",
                      "const": "MOVIES_CONFIG"
                    }
                  ],
                  "description": "Configuration entry for the OMDB API"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "const": "OMDB_CONFIG",
                        "description": "Configuration entry for the OMDB API"
                      },
                      {
                        "type": "string",
                        "const": "GITHUB_CONFIG"
                      },
                      {
                        "type": "string",
                        "const": "TORRENT_CONFIG"
                      },
                      {
                        "type": "string",
                        "const": "IOT_CONFIG"
                      },
                      {
                        "type": "string",
                        "const": "MOVIES_CONFIG"
                      }
                    ],
                    "description": "Configuration entry for the OMDB API"
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "const": "OMDB_CONFIG",
                        "description": "Configuration entry for the OMDB API"
                      },
                      {
                        "type": "string",
                        "const": "GITHUB_CONFIG"
                      },
                      {
                        "type": "string",
                        "const": "TORRENT_CONFIG"
                      },
                      {
                        "type": "string",
                        "const": "IOT_CONFIG"
                      },
                      {
                        "type": "string",
                        "const": "MOVIES_CONFIG"
                      }
                    ],
                    "description": "Configuration entry for the OMDB API"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "value": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "apiKey": {
                          "type": "string",
                          "description": "The API key for the OMDB API, can be requested at https://www.omdbapi.com/"
                        },
                        "trySearchMovieFromTitle": {
                          "type": "boolean",
                          "description": "If a movie / series entry is added, try to search for the movie from data extracted from the file name (e.g.: title, year, season, episode, etc...)"
                        },
                        "autoDownloadMetadata": {
                          "type": "boolean",
                          "description": "If a new imdb id is added, download the metadata automatically"
                        }
                      },
                      "required": ["apiKey", "trySearchMovieFromTitle", "autoDownloadMetadata"],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string"
                        },
                        "clientSecret": {
                          "type": "string"
                        }
                      },
                      "required": ["clientId", "clientSecret"],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "torrentDriveLetter": {
                          "type": "string"
                        },
                        "torrentPath": {
                          "type": "string"
                        }
                      },
                      "required": ["torrentDriveLetter", "torrentPath"],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "pingIntervalMs": {
                          "type": "number",
                          "description": "The interval in milliseconds at which to ping all IOT devices to check their availability. Defaults to 120000 (2 minutes)."
                        },
                        "pingTimeoutMs": {
                          "type": "number",
                          "description": "The timeout in milliseconds for each ping request. Defaults to 3000 (3 second)."
                        }
                      },
                      "required": ["pingIntervalMs", "pingTimeoutMs"],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "enableNfoParsing": {
                          "type": "boolean",
                          "description": "Search .nfo files for imdb id"
                        },
                        "watchFiles": {
                          "anyOf": [
                            {
                              "type": "string",
                              "const": "all"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "drive": {
                                    "type": "string",
                                    "description": "The drive to watch"
                                  },
                                  "path": {
                                    "type": "string",
                                    "description": "An optional path filter. If not set, all files in the drive will be watched."
                                  }
                                },
                                "required": ["drive"],
                                "additionalProperties": false
                              }
                            }
                          ],
                          "description": "'all' or a list of directories to watch for new movies."
                        }
                      },
                      "required": ["enableNfoParsing", "watchFiles"],
                      "additionalProperties": false
                    }
                  ]
                },
                "$ne": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "apiKey": {
                          "type": "string",
                          "description": "The API key for the OMDB API, can be requested at https://www.omdbapi.com/"
                        },
                        "trySearchMovieFromTitle": {
                          "type": "boolean",
                          "description": "If a movie / series entry is added, try to search for the movie from data extracted from the file name (e.g.: title, year, season, episode, etc...)"
                        },
                        "autoDownloadMetadata": {
                          "type": "boolean",
                          "description": "If a new imdb id is added, download the metadata automatically"
                        }
                      },
                      "required": ["apiKey", "trySearchMovieFromTitle", "autoDownloadMetadata"],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string"
                        },
                        "clientSecret": {
                          "type": "string"
                        }
                      },
                      "required": ["clientId", "clientSecret"],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "torrentDriveLetter": {
                          "type": "string"
                        },
                        "torrentPath": {
                          "type": "string"
                        }
                      },
                      "required": ["torrentDriveLetter", "torrentPath"],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "pingIntervalMs": {
                          "type": "number",
                          "description": "The interval in milliseconds at which to ping all IOT devices to check their availability. Defaults to 120000 (2 minutes)."
                        },
                        "pingTimeoutMs": {
                          "type": "number",
                          "description": "The timeout in milliseconds for each ping request. Defaults to 3000 (3 second)."
                        }
                      },
                      "required": ["pingIntervalMs", "pingTimeoutMs"],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "enableNfoParsing": {
                          "type": "boolean",
                          "description": "Search .nfo files for imdb id"
                        },
                        "watchFiles": {
                          "anyOf": [
                            {
                              "type": "string",
                              "const": "all"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "drive": {
                                    "type": "string",
                                    "description": "The drive to watch"
                                  },
                                  "path": {
                                    "type": "string",
                                    "description": "An optional path filter. If not set, all files in the drive will be watched."
                                  }
                                },
                                "required": ["drive"],
                                "additionalProperties": false
                              }
                            }
                          ],
                          "description": "'all' or a list of directories to watch for new movies."
                        }
                      },
                      "required": ["enableNfoParsing", "watchFiles"],
                      "additionalProperties": false
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "apiKey": {
                            "type": "string",
                            "description": "The API key for the OMDB API, can be requested at https://www.omdbapi.com/"
                          },
                          "trySearchMovieFromTitle": {
                            "type": "boolean",
                            "description": "If a movie / series entry is added, try to search for the movie from data extracted from the file name (e.g.: title, year, season, episode, etc...)"
                          },
                          "autoDownloadMetadata": {
                            "type": "boolean",
                            "description": "If a new imdb id is added, download the metadata automatically"
                          }
                        },
                        "required": ["apiKey", "trySearchMovieFromTitle", "autoDownloadMetadata"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "clientId": {
                            "type": "string"
                          },
                          "clientSecret": {
                            "type": "string"
                          }
                        },
                        "required": ["clientId", "clientSecret"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "torrentDriveLetter": {
                            "type": "string"
                          },
                          "torrentPath": {
                            "type": "string"
                          }
                        },
                        "required": ["torrentDriveLetter", "torrentPath"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "pingIntervalMs": {
                            "type": "number",
                            "description": "The interval in milliseconds at which to ping all IOT devices to check their availability. Defaults to 120000 (2 minutes)."
                          },
                          "pingTimeoutMs": {
                            "type": "number",
                            "description": "The timeout in milliseconds for each ping request. Defaults to 3000 (3 second)."
                          }
                        },
                        "required": ["pingIntervalMs", "pingTimeoutMs"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "enableNfoParsing": {
                            "type": "boolean",
                            "description": "Search .nfo files for imdb id"
                          },
                          "watchFiles": {
                            "anyOf": [
                              {
                                "type": "string",
                                "const": "all"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "drive": {
                                      "type": "string",
                                      "description": "The drive to watch"
                                    },
                                    "path": {
                                      "type": "string",
                                      "description": "An optional path filter. If not set, all files in the drive will be watched."
                                    }
                                  },
                                  "required": ["drive"],
                                  "additionalProperties": false
                                }
                              }
                            ],
                            "description": "'all' or a list of directories to watch for new movies."
                          }
                        },
                        "required": ["enableNfoParsing", "watchFiles"],
                        "additionalProperties": false
                      }
                    ]
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "apiKey": {
                            "type": "string",
                            "description": "The API key for the OMDB API, can be requested at https://www.omdbapi.com/"
                          },
                          "trySearchMovieFromTitle": {
                            "type": "boolean",
                            "description": "If a movie / series entry is added, try to search for the movie from data extracted from the file name (e.g.: title, year, season, episode, etc...)"
                          },
                          "autoDownloadMetadata": {
                            "type": "boolean",
                            "description": "If a new imdb id is added, download the metadata automatically"
                          }
                        },
                        "required": ["apiKey", "trySearchMovieFromTitle", "autoDownloadMetadata"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "clientId": {
                            "type": "string"
                          },
                          "clientSecret": {
                            "type": "string"
                          }
                        },
                        "required": ["clientId", "clientSecret"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "torrentDriveLetter": {
                            "type": "string"
                          },
                          "torrentPath": {
                            "type": "string"
                          }
                        },
                        "required": ["torrentDriveLetter", "torrentPath"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "pingIntervalMs": {
                            "type": "number",
                            "description": "The interval in milliseconds at which to ping all IOT devices to check their availability. Defaults to 120000 (2 minutes)."
                          },
                          "pingTimeoutMs": {
                            "type": "number",
                            "description": "The timeout in milliseconds for each ping request. Defaults to 3000 (3 second)."
                          }
                        },
                        "required": ["pingIntervalMs", "pingTimeoutMs"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "enableNfoParsing": {
                            "type": "boolean",
                            "description": "Search .nfo files for imdb id"
                          },
                          "watchFiles": {
                            "anyOf": [
                              {
                                "type": "string",
                                "const": "all"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "drive": {
                                      "type": "string",
                                      "description": "The drive to watch"
                                    },
                                    "path": {
                                      "type": "string",
                                      "description": "An optional path filter. If not set, all files in the drive will be watched."
                                    }
                                  },
                                  "required": ["drive"],
                                  "additionalProperties": false
                                }
                              }
                            ],
                            "description": "'all' or a list of directories to watch for new movies."
                          }
                        },
                        "required": ["enableNfoParsing", "watchFiles"],
                        "additionalProperties": false
                      }
                    ]
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "createdAt": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "format": "date-time"
                },
                "$endsWith": {
                  "type": "string",
                  "format": "date-time"
                },
                "$like": {
                  "type": "string",
                  "format": "date-time"
                },
                "$regex": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "format": "date-time"
                },
                "$ne": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "updatedAt": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "format": "date-time"
                },
                "$endsWith": {
                  "type": "string",
                  "format": "date-time"
                },
                "$like": {
                  "type": "string",
                  "format": "date-time"
                },
                "$regex": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "format": "date-time"
                },
                "$ne": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        }
      }
    },
    "GetCollectionResult<Config>": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number",
          "description": "The Total count of entities"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Config"
          },
          "description": "List of the selected entities"
        }
      },
      "required": ["count", "entries"],
      "additionalProperties": false,
      "description": "Response Model for GetCollection"
    },
    "Config": {
      "type": "object",
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string",
              "const": "OMDB_CONFIG",
              "description": "Configuration entry for the OMDB API"
            },
            {
              "type": "string",
              "const": "GITHUB_CONFIG"
            },
            {
              "type": "string",
              "const": "TORRENT_CONFIG"
            },
            {
              "type": "string",
              "const": "IOT_CONFIG"
            },
            {
              "type": "string",
              "const": "MOVIES_CONFIG"
            }
          ],
          "description": "Configuration entry for the OMDB API"
        },
        "value": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "apiKey": {
                  "type": "string",
                  "description": "The API key for the OMDB API, can be requested at https://www.omdbapi.com/"
                },
                "trySearchMovieFromTitle": {
                  "type": "boolean",
                  "description": "If a movie / series entry is added, try to search for the movie from data extracted from the file name (e.g.: title, year, season, episode, etc...)"
                },
                "autoDownloadMetadata": {
                  "type": "boolean",
                  "description": "If a new imdb id is added, download the metadata automatically"
                }
              },
              "required": ["apiKey", "trySearchMovieFromTitle", "autoDownloadMetadata"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string"
                },
                "clientSecret": {
                  "type": "string"
                }
              },
              "required": ["clientId", "clientSecret"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "torrentDriveLetter": {
                  "type": "string"
                },
                "torrentPath": {
                  "type": "string"
                }
              },
              "required": ["torrentDriveLetter", "torrentPath"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "pingIntervalMs": {
                  "type": "number",
                  "description": "The interval in milliseconds at which to ping all IOT devices to check their availability. Defaults to 120000 (2 minutes)."
                },
                "pingTimeoutMs": {
                  "type": "number",
                  "description": "The timeout in milliseconds for each ping request. Defaults to 3000 (3 second)."
                }
              },
              "required": ["pingIntervalMs", "pingTimeoutMs"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "enableNfoParsing": {
                  "type": "boolean",
                  "description": "Search .nfo files for imdb id"
                },
                "watchFiles": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "all"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "drive": {
                            "type": "string",
                            "description": "The drive to watch"
                          },
                          "path": {
                            "type": "string",
                            "description": "An optional path filter. If not set, all files in the drive will be watched."
                          }
                        },
                        "required": ["drive"],
                        "additionalProperties": false
                      }
                    }
                  ],
                  "description": "'all' or a list of directories to watch for new movies."
                }
              },
              "required": ["enableNfoParsing", "watchFiles"],
              "additionalProperties": false
            }
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["id", "value", "createdAt", "updatedAt"],
      "additionalProperties": false
    },
    "GetEntityEndpoint<Config,\"id\">": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {
            "select": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["id", "value", "createdAt", "updatedAt"]
              },
              "description": "The list of fields to select"
            }
          },
          "additionalProperties": false
        },
        "url": {
          "type": "object",
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "string",
                  "const": "OMDB_CONFIG",
                  "description": "Configuration entry for the OMDB API"
                },
                {
                  "type": "string",
                  "const": "GITHUB_CONFIG"
                },
                {
                  "type": "string",
                  "const": "TORRENT_CONFIG"
                },
                {
                  "type": "string",
                  "const": "IOT_CONFIG"
                },
                {
                  "type": "string",
                  "const": "MOVIES_CONFIG"
                }
              ],
              "description": "The entity's unique identifier"
            }
          },
          "required": ["id"],
          "additionalProperties": false
        },
        "result": {
          "$ref": "#/definitions/Config"
        }
      },
      "required": ["query", "url", "result"],
      "additionalProperties": false,
      "description": "Endpoint model for getting a single entity"
    },
    "PostEndpoint<Config,\"id\",Pick<Config,(\"id\"|\"value\")>>": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/Pick%3CConfig%2C(%22id%22%7C%22value%22)%3E"
        },
        "result": {
          "$ref": "#/definitions/Config"
        }
      },
      "required": ["body", "result"],
      "additionalProperties": false,
      "description": "Endpoint model for creating new entities"
    },
    "Pick<Config,(\"id\"|\"value\")>": {
      "type": "object",
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string",
              "const": "OMDB_CONFIG",
              "description": "Configuration entry for the OMDB API"
            },
            {
              "type": "string",
              "const": "GITHUB_CONFIG"
            },
            {
              "type": "string",
              "const": "TORRENT_CONFIG"
            },
            {
              "type": "string",
              "const": "IOT_CONFIG"
            },
            {
              "type": "string",
              "const": "MOVIES_CONFIG"
            }
          ],
          "description": "Configuration entry for the OMDB API"
        },
        "value": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "apiKey": {
                  "type": "string",
                  "description": "The API key for the OMDB API, can be requested at https://www.omdbapi.com/"
                },
                "trySearchMovieFromTitle": {
                  "type": "boolean",
                  "description": "If a movie / series entry is added, try to search for the movie from data extracted from the file name (e.g.: title, year, season, episode, etc...)"
                },
                "autoDownloadMetadata": {
                  "type": "boolean",
                  "description": "If a new imdb id is added, download the metadata automatically"
                }
              },
              "required": ["apiKey", "trySearchMovieFromTitle", "autoDownloadMetadata"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string"
                },
                "clientSecret": {
                  "type": "string"
                }
              },
              "required": ["clientId", "clientSecret"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "torrentDriveLetter": {
                  "type": "string"
                },
                "torrentPath": {
                  "type": "string"
                }
              },
              "required": ["torrentDriveLetter", "torrentPath"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "pingIntervalMs": {
                  "type": "number",
                  "description": "The interval in milliseconds at which to ping all IOT devices to check their availability. Defaults to 120000 (2 minutes)."
                },
                "pingTimeoutMs": {
                  "type": "number",
                  "description": "The timeout in milliseconds for each ping request. Defaults to 3000 (3 second)."
                }
              },
              "required": ["pingIntervalMs", "pingTimeoutMs"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "enableNfoParsing": {
                  "type": "boolean",
                  "description": "Search .nfo files for imdb id"
                },
                "watchFiles": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "all"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "drive": {
                            "type": "string",
                            "description": "The drive to watch"
                          },
                          "path": {
                            "type": "string",
                            "description": "An optional path filter. If not set, all files in the drive will be watched."
                          }
                        },
                        "required": ["drive"],
                        "additionalProperties": false
                      }
                    }
                  ],
                  "description": "'all' or a list of directories to watch for new movies."
                }
              },
              "required": ["enableNfoParsing", "watchFiles"],
              "additionalProperties": false
            }
          ]
        }
      },
      "required": ["id", "value"],
      "additionalProperties": false
    },
    "PatchEndpoint<Config,\"id\">": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/Partial%3CConfig%3E"
        },
        "url": {
          "type": "object",
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "string",
                  "const": "OMDB_CONFIG",
                  "description": "Configuration entry for the OMDB API"
                },
                {
                  "type": "string",
                  "const": "GITHUB_CONFIG"
                },
                {
                  "type": "string",
                  "const": "TORRENT_CONFIG"
                },
                {
                  "type": "string",
                  "const": "IOT_CONFIG"
                },
                {
                  "type": "string",
                  "const": "MOVIES_CONFIG"
                }
              ],
              "description": "Configuration entry for the OMDB API"
            }
          },
          "required": ["id"],
          "additionalProperties": false
        },
        "result": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": ["body", "url", "result"],
      "additionalProperties": false,
      "description": "Endpoint model for updating entities"
    },
    "Partial<Config>": {
      "type": "object",
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string",
              "const": "OMDB_CONFIG",
              "description": "Configuration entry for the OMDB API"
            },
            {
              "type": "string",
              "const": "GITHUB_CONFIG"
            },
            {
              "type": "string",
              "const": "TORRENT_CONFIG"
            },
            {
              "type": "string",
              "const": "IOT_CONFIG"
            },
            {
              "type": "string",
              "const": "MOVIES_CONFIG"
            }
          ],
          "description": "Configuration entry for the OMDB API"
        },
        "value": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "apiKey": {
                  "type": "string",
                  "description": "The API key for the OMDB API, can be requested at https://www.omdbapi.com/"
                },
                "trySearchMovieFromTitle": {
                  "type": "boolean",
                  "description": "If a movie / series entry is added, try to search for the movie from data extracted from the file name (e.g.: title, year, season, episode, etc...)"
                },
                "autoDownloadMetadata": {
                  "type": "boolean",
                  "description": "If a new imdb id is added, download the metadata automatically"
                }
              },
              "required": ["apiKey", "trySearchMovieFromTitle", "autoDownloadMetadata"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string"
                },
                "clientSecret": {
                  "type": "string"
                }
              },
              "required": ["clientId", "clientSecret"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "torrentDriveLetter": {
                  "type": "string"
                },
                "torrentPath": {
                  "type": "string"
                }
              },
              "required": ["torrentDriveLetter", "torrentPath"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "pingIntervalMs": {
                  "type": "number",
                  "description": "The interval in milliseconds at which to ping all IOT devices to check their availability. Defaults to 120000 (2 minutes)."
                },
                "pingTimeoutMs": {
                  "type": "number",
                  "description": "The timeout in milliseconds for each ping request. Defaults to 3000 (3 second)."
                }
              },
              "required": ["pingIntervalMs", "pingTimeoutMs"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "enableNfoParsing": {
                  "type": "boolean",
                  "description": "Search .nfo files for imdb id"
                },
                "watchFiles": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "all"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "drive": {
                            "type": "string",
                            "description": "The drive to watch"
                          },
                          "path": {
                            "type": "string",
                            "description": "An optional path filter. If not set, all files in the drive will be watched."
                          }
                        },
                        "required": ["drive"],
                        "additionalProperties": false
                      }
                    }
                  ],
                  "description": "'all' or a list of directories to watch for new movies."
                }
              },
              "required": ["enableNfoParsing", "watchFiles"],
              "additionalProperties": false
            }
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "additionalProperties": false
    },
    "DeleteEndpoint<Config,\"id\">": {
      "type": "object",
      "properties": {
        "url": {
          "type": "object",
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "string",
                  "const": "OMDB_CONFIG",
                  "description": "Configuration entry for the OMDB API"
                },
                {
                  "type": "string",
                  "const": "GITHUB_CONFIG"
                },
                {
                  "type": "string",
                  "const": "TORRENT_CONFIG"
                },
                {
                  "type": "string",
                  "const": "IOT_CONFIG"
                },
                {
                  "type": "string",
                  "const": "MOVIES_CONFIG"
                }
              ],
              "description": "Configuration entry for the OMDB API"
            }
          },
          "required": ["id"],
          "additionalProperties": false
        },
        "result": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": ["url", "result"],
      "additionalProperties": false,
      "description": "Endpoint model for deleting entities"
    }
  }
}
