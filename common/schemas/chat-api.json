{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "AcceptInvitationAction": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/ChatInvitation"
        },
        "url": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          },
          "required": [
            "id"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "result",
        "url"
      ],
      "additionalProperties": false
    },
    "ChatInvitation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the chat invitation. This is used to identify the invitation in the system. It is a primary key in the database. It is also used to reference the invitation in other models."
        },
        "chatId": {
          "type": "string",
          "description": "The foreign key to the chat entity to which this invitation belongs. This is used to associate the invitation with the correct chat. It is a foreign key to the Chat model."
        },
        "chatName": {
          "type": "string",
          "description": "The name of the chat to which the user is invited. This is used to display the chat name in the user interface."
        },
        "message": {
          "type": "string",
          "description": "The message that is sent with the chat invitation. This is used to provide context or information about the invitation. It can include details about the chat or a personal message to the user."
        },
        "userId": {
          "type": "string",
          "description": "The unique identifier of the user who is invited to the chat. This is used to identify the user in the system. It is a foreign key to the User model."
        },
        "status": {
          "type": "string",
          "enum": [
            "pending",
            "accepted",
            "rejected",
            "revoked",
            "expired"
          ],
          "description": "The status of the chat invitation. This is used to track whether the invitation is pending, accepted, or rejected."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the invitation was created. This is used to track when the invitation was sent."
        },
        "createdBy": {
          "type": "string",
          "description": "Unique identifier of the user who created the invitation. This is used to track who sent the invitation. It is a foreign key to the User model."
        }
      },
      "required": [
        "id",
        "chatId",
        "chatName",
        "message",
        "userId",
        "status",
        "createdAt",
        "createdBy"
      ],
      "additionalProperties": false
    },
    "RejectInvitationAction": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/ChatInvitation"
        },
        "url": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          },
          "required": [
            "id"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "result",
        "url"
      ],
      "additionalProperties": false
    },
    "RevokeInvitationAction": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/ChatInvitation"
        },
        "url": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          },
          "required": [
            "id"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "result",
        "url"
      ],
      "additionalProperties": false
    },
    "ChatApi": {
      "type": "object",
      "properties": {
        "GET": {
          "type": "object",
          "properties": {
            "/chat": {
              "$ref": "#/definitions/GetCollectionEndpoint%3CChat%3E"
            },
            "/chat/:id": {
              "$ref": "#/definitions/GetEntityEndpoint%3CChat%2C%22id%22%3E"
            },
            "/chat-messages": {
              "$ref": "#/definitions/GetCollectionEndpoint%3CChatMessage%3E"
            },
            "/chat-messages/:id": {
              "$ref": "#/definitions/GetEntityEndpoint%3CChatMessage%2C%22id%22%3E"
            },
            "/chat-invitations": {
              "$ref": "#/definitions/GetCollectionEndpoint%3CChatInvitation%3E"
            },
            "/chat-invitations/:id": {
              "$ref": "#/definitions/GetEntityEndpoint%3CChatInvitation%2C%22id%22%3E"
            }
          },
          "required": [
            "/chat",
            "/chat/:id",
            "/chat-messages",
            "/chat-messages/:id",
            "/chat-invitations",
            "/chat-invitations/:id"
          ],
          "additionalProperties": false
        },
        "POST": {
          "type": "object",
          "properties": {
            "/chat": {
              "$ref": "#/definitions/PostEndpoint%3CChat%2C%22id%22%3E"
            },
            "/chat-messages": {
              "$ref": "#/definitions/PostEndpoint%3CChatMessage%2C%22id%22%3E"
            },
            "/chat-invitations": {
              "$ref": "#/definitions/PostEndpoint%3CChatInvitation%2C%22id%22%3E"
            },
            "/chat-invitations/:id/accept": {
              "$ref": "#/definitions/AcceptInvitationAction"
            },
            "/chat-invitations/:id/reject": {
              "$ref": "#/definitions/RejectInvitationAction"
            },
            "/chat-invitations/:id/revoke": {
              "$ref": "#/definitions/RevokeInvitationAction"
            }
          },
          "required": [
            "/chat",
            "/chat-messages",
            "/chat-invitations",
            "/chat-invitations/:id/accept",
            "/chat-invitations/:id/reject",
            "/chat-invitations/:id/revoke"
          ],
          "additionalProperties": false
        },
        "PATCH": {
          "type": "object",
          "properties": {
            "/chat/:id": {
              "$ref": "#/definitions/PatchEndpoint%3CChat%2C%22id%22%3E"
            },
            "/chat-messages/:id": {
              "$ref": "#/definitions/PatchEndpoint%3CChatMessage%2C%22id%22%3E"
            },
            "/chat-invitations/:id": {
              "$ref": "#/definitions/PatchEndpoint%3CChatInvitation%2C%22id%22%3E"
            }
          },
          "required": [
            "/chat/:id",
            "/chat-messages/:id",
            "/chat-invitations/:id"
          ],
          "additionalProperties": false
        },
        "PUT": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": [
              "result"
            ],
            "additionalProperties": false
          }
        },
        "DELETE": {
          "type": "object",
          "properties": {
            "/chat/:id": {
              "$ref": "#/definitions/DeleteEndpoint%3CChat%2C%22id%22%3E"
            },
            "/chat-messages/:id": {
              "$ref": "#/definitions/DeleteEndpoint%3CChatMessage%2C%22id%22%3E"
            }
          },
          "required": [
            "/chat/:id",
            "/chat-messages/:id"
          ],
          "additionalProperties": false
        },
        "HEAD": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": [
              "result"
            ],
            "additionalProperties": false
          }
        },
        "CONNECT": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": [
              "result"
            ],
            "additionalProperties": false
          }
        },
        "TRACE": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": [
              "result"
            ],
            "additionalProperties": false
          }
        },
        "OPTIONS": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": [
              "result"
            ],
            "additionalProperties": false
          }
        }
      },
      "required": [
        "GET",
        "POST",
        "PATCH",
        "DELETE"
      ],
      "additionalProperties": false
    },
    "RestApi": {
      "type": "object",
      "properties": {
        "GET": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": [
              "result"
            ],
            "additionalProperties": false
          }
        },
        "POST": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": [
              "result"
            ],
            "additionalProperties": false
          }
        },
        "PATCH": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": [
              "result"
            ],
            "additionalProperties": false
          }
        },
        "PUT": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": [
              "result"
            ],
            "additionalProperties": false
          }
        },
        "DELETE": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": [
              "result"
            ],
            "additionalProperties": false
          }
        },
        "HEAD": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": [
              "result"
            ],
            "additionalProperties": false
          }
        },
        "CONNECT": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": [
              "result"
            ],
            "additionalProperties": false
          }
        },
        "TRACE": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": [
              "result"
            ],
            "additionalProperties": false
          }
        },
        "OPTIONS": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "result": {},
              "url": {},
              "query": {},
              "body": {},
              "headers": {}
            },
            "required": [
              "result"
            ],
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "GetCollectionEndpoint<Chat>": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {
            "findOptions": {
              "$ref": "#/definitions/FindOptions%3CChat%2C(%22id%22%7C%22name%22%7C%22description%22%7C%22createdAt%22%7C%22owner%22%7C%22participants%22)%5B%5D%3E"
            }
          },
          "additionalProperties": false
        },
        "result": {
          "$ref": "#/definitions/GetCollectionResult%3CChat%3E"
        }
      },
      "required": [
        "query",
        "result"
      ],
      "additionalProperties": false,
      "description": "Rest endpoint model for getting / querying collections"
    },
    "FindOptions<Chat,(\"id\"|\"name\"|\"description\"|\"createdAt\"|\"owner\"|\"participants\")[]>": {
      "type": "object",
      "properties": {
        "top": {
          "type": "number",
          "description": "Limits the hits"
        },
        "skip": {
          "type": "number",
          "description": "Skips the first N hit"
        },
        "order": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "name": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "description": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "createdAt": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "owner": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "participants": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          "additionalProperties": false,
          "description": "Sets up an order by a field and a direction"
        },
        "select": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "id",
              "name",
              "description",
              "createdAt",
              "owner",
              "participants"
            ]
          },
          "description": "The result set will be limited to these fields"
        },
        "filter": {
          "$ref": "#/definitions/FilterType%3CChat%3E",
          "description": "The fields should match this filter"
        }
      },
      "additionalProperties": false,
      "description": "Type for default filtering model"
    },
    "FilterType<Chat>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "$and": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CChat%3E"
          }
        },
        "$not": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CChat%3E"
          }
        },
        "$nor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CChat%3E"
          }
        },
        "$or": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CChat%3E"
          }
        },
        "id": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "The unique identifier"
                },
                "$endsWith": {
                  "type": "string",
                  "description": "The unique identifier"
                },
                "$like": {
                  "type": "string",
                  "description": "The unique identifier"
                },
                "$regex": {
                  "type": "string",
                  "description": "The unique identifier"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The unique identifier"
                },
                "$ne": {
                  "type": "string",
                  "description": "The unique identifier"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The unique identifier"
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The unique identifier"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "name": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "The name of the chat"
                },
                "$endsWith": {
                  "type": "string",
                  "description": "The name of the chat"
                },
                "$like": {
                  "type": "string",
                  "description": "The name of the chat"
                },
                "$regex": {
                  "type": "string",
                  "description": "The name of the chat"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The name of the chat"
                },
                "$ne": {
                  "type": "string",
                  "description": "The name of the chat"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The name of the chat"
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The name of the chat"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "description": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The description in markdown format"
                },
                "$ne": {
                  "type": "string",
                  "description": "The description in markdown format"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "not": {}
                      }
                    ],
                    "description": "The description in markdown format"
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "not": {}
                      }
                    ],
                    "description": "The description in markdown format"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "createdAt": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "The date the chat was created"
                },
                "$endsWith": {
                  "type": "string",
                  "description": "The date the chat was created"
                },
                "$like": {
                  "type": "string",
                  "description": "The date the chat was created"
                },
                "$regex": {
                  "type": "string",
                  "description": "The date the chat was created"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The date the chat was created"
                },
                "$ne": {
                  "type": "string",
                  "description": "The date the chat was created"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The date the chat was created"
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The date the chat was created"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "owner": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "The owner of the chat"
                },
                "$endsWith": {
                  "type": "string",
                  "description": "The owner of the chat"
                },
                "$like": {
                  "type": "string",
                  "description": "The owner of the chat"
                },
                "$regex": {
                  "type": "string",
                  "description": "The owner of the chat"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The owner of the chat"
                },
                "$ne": {
                  "type": "string",
                  "description": "The owner of the chat"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The owner of the chat"
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The owner of the chat"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "participants": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of participants in the chat"
                },
                "$ne": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of participants in the chat"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of participants in the chat"
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of participants in the chat"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        }
      }
    },
    "GetCollectionResult<Chat>": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number",
          "description": "The Total count of entities"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Chat"
          },
          "description": "List of the selected entities"
        }
      },
      "required": [
        "count",
        "entries"
      ],
      "additionalProperties": false,
      "description": "Response Model for GetCollection"
    },
    "Chat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier"
        },
        "name": {
          "type": "string",
          "description": "The name of the chat"
        },
        "description": {
          "type": "string",
          "description": "The description in markdown format"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The date the chat was created"
        },
        "owner": {
          "type": "string",
          "description": "The owner of the chat"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of participants in the chat"
        }
      },
      "required": [
        "id",
        "name",
        "createdAt",
        "owner",
        "participants"
      ],
      "additionalProperties": false
    },
    "GetEntityEndpoint<Chat,\"id\">": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {
            "select": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "description",
                  "createdAt",
                  "owner",
                  "participants"
                ]
              },
              "description": "The list of fields to select"
            }
          },
          "additionalProperties": false
        },
        "url": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The entity's unique identifier"
            }
          },
          "required": [
            "id"
          ],
          "additionalProperties": false
        },
        "result": {
          "$ref": "#/definitions/Chat"
        }
      },
      "required": [
        "query",
        "url",
        "result"
      ],
      "additionalProperties": false,
      "description": "Endpoint model for getting a single entity"
    },
    "GetCollectionEndpoint<ChatMessage>": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {
            "findOptions": {
              "$ref": "#/definitions/FindOptions%3CChatMessage%2C(%22id%22%7C%22content%22%7C%22createdAt%22%7C%22owner%22%7C%22chatId%22%7C%22attachments%22)%5B%5D%3E"
            }
          },
          "additionalProperties": false
        },
        "result": {
          "$ref": "#/definitions/GetCollectionResult%3CChatMessage%3E"
        }
      },
      "required": [
        "query",
        "result"
      ],
      "additionalProperties": false,
      "description": "Rest endpoint model for getting / querying collections"
    },
    "FindOptions<ChatMessage,(\"id\"|\"content\"|\"createdAt\"|\"owner\"|\"chatId\"|\"attachments\")[]>": {
      "type": "object",
      "properties": {
        "top": {
          "type": "number",
          "description": "Limits the hits"
        },
        "skip": {
          "type": "number",
          "description": "Skips the first N hit"
        },
        "order": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "content": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "createdAt": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "owner": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "chatId": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "attachments": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          "additionalProperties": false,
          "description": "Sets up an order by a field and a direction"
        },
        "select": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "id",
              "content",
              "createdAt",
              "owner",
              "chatId",
              "attachments"
            ]
          },
          "description": "The result set will be limited to these fields"
        },
        "filter": {
          "$ref": "#/definitions/FilterType%3CChatMessage%3E",
          "description": "The fields should match this filter"
        }
      },
      "additionalProperties": false,
      "description": "Type for default filtering model"
    },
    "FilterType<ChatMessage>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "$and": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CChatMessage%3E"
          }
        },
        "$not": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CChatMessage%3E"
          }
        },
        "$nor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CChatMessage%3E"
          }
        },
        "$or": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CChatMessage%3E"
          }
        },
        "id": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "The unique identifier of the message"
                },
                "$endsWith": {
                  "type": "string",
                  "description": "The unique identifier of the message"
                },
                "$like": {
                  "type": "string",
                  "description": "The unique identifier of the message"
                },
                "$regex": {
                  "type": "string",
                  "description": "The unique identifier of the message"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The unique identifier of the message"
                },
                "$ne": {
                  "type": "string",
                  "description": "The unique identifier of the message"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The unique identifier of the message"
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The unique identifier of the message"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "content": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "The content of the message"
                },
                "$endsWith": {
                  "type": "string",
                  "description": "The content of the message"
                },
                "$like": {
                  "type": "string",
                  "description": "The content of the message"
                },
                "$regex": {
                  "type": "string",
                  "description": "The content of the message"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The content of the message"
                },
                "$ne": {
                  "type": "string",
                  "description": "The content of the message"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The content of the message"
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The content of the message"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "createdAt": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "The date the message was created"
                },
                "$endsWith": {
                  "type": "string",
                  "description": "The date the message was created"
                },
                "$like": {
                  "type": "string",
                  "description": "The date the message was created"
                },
                "$regex": {
                  "type": "string",
                  "description": "The date the message was created"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The date the message was created"
                },
                "$ne": {
                  "type": "string",
                  "description": "The date the message was created"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The date the message was created"
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The date the message was created"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "owner": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "The unique identifier of the user who sent the message"
                },
                "$endsWith": {
                  "type": "string",
                  "description": "The unique identifier of the user who sent the message"
                },
                "$like": {
                  "type": "string",
                  "description": "The unique identifier of the user who sent the message"
                },
                "$regex": {
                  "type": "string",
                  "description": "The unique identifier of the user who sent the message"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The unique identifier of the user who sent the message"
                },
                "$ne": {
                  "type": "string",
                  "description": "The unique identifier of the user who sent the message"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The unique identifier of the user who sent the message"
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The unique identifier of the user who sent the message"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "chatId": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "The unique identifier of the chat to which this message belongs"
                },
                "$endsWith": {
                  "type": "string",
                  "description": "The unique identifier of the chat to which this message belongs"
                },
                "$like": {
                  "type": "string",
                  "description": "The unique identifier of the chat to which this message belongs"
                },
                "$regex": {
                  "type": "string",
                  "description": "The unique identifier of the chat to which this message belongs"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The unique identifier of the chat to which this message belongs"
                },
                "$ne": {
                  "type": "string",
                  "description": "The unique identifier of the chat to which this message belongs"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The unique identifier of the chat to which this message belongs"
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The unique identifier of the chat to which this message belongs"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "attachments": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ChatMessageAttachment"
                  },
                  "description": "The attachments of the message"
                },
                "$ne": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ChatMessageAttachment"
                  },
                  "description": "The attachments of the message"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ChatMessageAttachment"
                    },
                    "description": "The attachments of the message"
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ChatMessageAttachment"
                    },
                    "description": "The attachments of the message"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        }
      }
    },
    "ChatMessageAttachment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the attachment"
        },
        "fileName": {
          "type": "string",
          "description": "The type of the file"
        },
        "type": {
          "type": "string",
          "description": "The type that hints how the attachment can be displayed"
        }
      },
      "required": [
        "id",
        "fileName",
        "type"
      ],
      "additionalProperties": false
    },
    "GetCollectionResult<ChatMessage>": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number",
          "description": "The Total count of entities"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChatMessage"
          },
          "description": "List of the selected entities"
        }
      },
      "required": [
        "count",
        "entries"
      ],
      "additionalProperties": false,
      "description": "Response Model for GetCollection"
    },
    "ChatMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the message"
        },
        "content": {
          "type": "string",
          "description": "The content of the message"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The date the message was created"
        },
        "owner": {
          "type": "string",
          "description": "The unique identifier of the user who sent the message"
        },
        "chatId": {
          "type": "string",
          "description": "The unique identifier of the chat to which this message belongs"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChatMessageAttachment"
          },
          "description": "The attachments of the message"
        }
      },
      "required": [
        "id",
        "content",
        "createdAt",
        "owner",
        "chatId",
        "attachments"
      ],
      "additionalProperties": false
    },
    "GetEntityEndpoint<ChatMessage,\"id\">": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {
            "select": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "content",
                  "createdAt",
                  "owner",
                  "chatId",
                  "attachments"
                ]
              },
              "description": "The list of fields to select"
            }
          },
          "additionalProperties": false
        },
        "url": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The entity's unique identifier"
            }
          },
          "required": [
            "id"
          ],
          "additionalProperties": false
        },
        "result": {
          "$ref": "#/definitions/ChatMessage"
        }
      },
      "required": [
        "query",
        "url",
        "result"
      ],
      "additionalProperties": false,
      "description": "Endpoint model for getting a single entity"
    },
    "GetCollectionEndpoint<ChatInvitation>": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {
            "findOptions": {
              "$ref": "#/definitions/FindOptions%3CChatInvitation%2C(%22id%22%7C%22chatId%22%7C%22chatName%22%7C%22message%22%7C%22userId%22%7C%22status%22%7C%22createdAt%22%7C%22createdBy%22)%5B%5D%3E"
            }
          },
          "additionalProperties": false
        },
        "result": {
          "$ref": "#/definitions/GetCollectionResult%3CChatInvitation%3E"
        }
      },
      "required": [
        "query",
        "result"
      ],
      "additionalProperties": false,
      "description": "Rest endpoint model for getting / querying collections"
    },
    "FindOptions<ChatInvitation,(\"id\"|\"chatId\"|\"chatName\"|\"message\"|\"userId\"|\"status\"|\"createdAt\"|\"createdBy\")[]>": {
      "type": "object",
      "properties": {
        "top": {
          "type": "number",
          "description": "Limits the hits"
        },
        "skip": {
          "type": "number",
          "description": "Skips the first N hit"
        },
        "order": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "chatId": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "chatName": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "message": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "userId": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "status": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "createdAt": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "createdBy": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          "additionalProperties": false,
          "description": "Sets up an order by a field and a direction"
        },
        "select": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "id",
              "chatId",
              "chatName",
              "message",
              "userId",
              "status",
              "createdAt",
              "createdBy"
            ]
          },
          "description": "The result set will be limited to these fields"
        },
        "filter": {
          "$ref": "#/definitions/FilterType%3CChatInvitation%3E",
          "description": "The fields should match this filter"
        }
      },
      "additionalProperties": false,
      "description": "Type for default filtering model"
    },
    "FilterType<ChatInvitation>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "$and": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CChatInvitation%3E"
          }
        },
        "$not": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CChatInvitation%3E"
          }
        },
        "$nor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CChatInvitation%3E"
          }
        },
        "$or": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterType%3CChatInvitation%3E"
          }
        },
        "id": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "The unique identifier of the chat invitation. This is used to identify the invitation in the system. It is a primary key in the database. It is also used to reference the invitation in other models."
                },
                "$endsWith": {
                  "type": "string",
                  "description": "The unique identifier of the chat invitation. This is used to identify the invitation in the system. It is a primary key in the database. It is also used to reference the invitation in other models."
                },
                "$like": {
                  "type": "string",
                  "description": "The unique identifier of the chat invitation. This is used to identify the invitation in the system. It is a primary key in the database. It is also used to reference the invitation in other models."
                },
                "$regex": {
                  "type": "string",
                  "description": "The unique identifier of the chat invitation. This is used to identify the invitation in the system. It is a primary key in the database. It is also used to reference the invitation in other models."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The unique identifier of the chat invitation. This is used to identify the invitation in the system. It is a primary key in the database. It is also used to reference the invitation in other models."
                },
                "$ne": {
                  "type": "string",
                  "description": "The unique identifier of the chat invitation. This is used to identify the invitation in the system. It is a primary key in the database. It is also used to reference the invitation in other models."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The unique identifier of the chat invitation. This is used to identify the invitation in the system. It is a primary key in the database. It is also used to reference the invitation in other models."
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The unique identifier of the chat invitation. This is used to identify the invitation in the system. It is a primary key in the database. It is also used to reference the invitation in other models."
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "chatId": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "The foreign key to the chat entity to which this invitation belongs. This is used to associate the invitation with the correct chat. It is a foreign key to the Chat model."
                },
                "$endsWith": {
                  "type": "string",
                  "description": "The foreign key to the chat entity to which this invitation belongs. This is used to associate the invitation with the correct chat. It is a foreign key to the Chat model."
                },
                "$like": {
                  "type": "string",
                  "description": "The foreign key to the chat entity to which this invitation belongs. This is used to associate the invitation with the correct chat. It is a foreign key to the Chat model."
                },
                "$regex": {
                  "type": "string",
                  "description": "The foreign key to the chat entity to which this invitation belongs. This is used to associate the invitation with the correct chat. It is a foreign key to the Chat model."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The foreign key to the chat entity to which this invitation belongs. This is used to associate the invitation with the correct chat. It is a foreign key to the Chat model."
                },
                "$ne": {
                  "type": "string",
                  "description": "The foreign key to the chat entity to which this invitation belongs. This is used to associate the invitation with the correct chat. It is a foreign key to the Chat model."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The foreign key to the chat entity to which this invitation belongs. This is used to associate the invitation with the correct chat. It is a foreign key to the Chat model."
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The foreign key to the chat entity to which this invitation belongs. This is used to associate the invitation with the correct chat. It is a foreign key to the Chat model."
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "chatName": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "The name of the chat to which the user is invited. This is used to display the chat name in the user interface."
                },
                "$endsWith": {
                  "type": "string",
                  "description": "The name of the chat to which the user is invited. This is used to display the chat name in the user interface."
                },
                "$like": {
                  "type": "string",
                  "description": "The name of the chat to which the user is invited. This is used to display the chat name in the user interface."
                },
                "$regex": {
                  "type": "string",
                  "description": "The name of the chat to which the user is invited. This is used to display the chat name in the user interface."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The name of the chat to which the user is invited. This is used to display the chat name in the user interface."
                },
                "$ne": {
                  "type": "string",
                  "description": "The name of the chat to which the user is invited. This is used to display the chat name in the user interface."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The name of the chat to which the user is invited. This is used to display the chat name in the user interface."
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The name of the chat to which the user is invited. This is used to display the chat name in the user interface."
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "message": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "The message that is sent with the chat invitation. This is used to provide context or information about the invitation. It can include details about the chat or a personal message to the user."
                },
                "$endsWith": {
                  "type": "string",
                  "description": "The message that is sent with the chat invitation. This is used to provide context or information about the invitation. It can include details about the chat or a personal message to the user."
                },
                "$like": {
                  "type": "string",
                  "description": "The message that is sent with the chat invitation. This is used to provide context or information about the invitation. It can include details about the chat or a personal message to the user."
                },
                "$regex": {
                  "type": "string",
                  "description": "The message that is sent with the chat invitation. This is used to provide context or information about the invitation. It can include details about the chat or a personal message to the user."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The message that is sent with the chat invitation. This is used to provide context or information about the invitation. It can include details about the chat or a personal message to the user."
                },
                "$ne": {
                  "type": "string",
                  "description": "The message that is sent with the chat invitation. This is used to provide context or information about the invitation. It can include details about the chat or a personal message to the user."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The message that is sent with the chat invitation. This is used to provide context or information about the invitation. It can include details about the chat or a personal message to the user."
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The message that is sent with the chat invitation. This is used to provide context or information about the invitation. It can include details about the chat or a personal message to the user."
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "userId": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "The unique identifier of the user who is invited to the chat. This is used to identify the user in the system. It is a foreign key to the User model."
                },
                "$endsWith": {
                  "type": "string",
                  "description": "The unique identifier of the user who is invited to the chat. This is used to identify the user in the system. It is a foreign key to the User model."
                },
                "$like": {
                  "type": "string",
                  "description": "The unique identifier of the user who is invited to the chat. This is used to identify the user in the system. It is a foreign key to the User model."
                },
                "$regex": {
                  "type": "string",
                  "description": "The unique identifier of the user who is invited to the chat. This is used to identify the user in the system. It is a foreign key to the User model."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The unique identifier of the user who is invited to the chat. This is used to identify the user in the system. It is a foreign key to the User model."
                },
                "$ne": {
                  "type": "string",
                  "description": "The unique identifier of the user who is invited to the chat. This is used to identify the user in the system. It is a foreign key to the User model."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The unique identifier of the user who is invited to the chat. This is used to identify the user in the system. It is a foreign key to the User model."
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The unique identifier of the user who is invited to the chat. This is used to identify the user in the system. It is a foreign key to the User model."
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "status": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "accepted",
                    "rejected",
                    "revoked",
                    "expired"
                  ],
                  "description": "The status of the chat invitation. This is used to track whether the invitation is pending, accepted, or rejected."
                },
                "$endsWith": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "accepted",
                    "rejected",
                    "revoked",
                    "expired"
                  ],
                  "description": "The status of the chat invitation. This is used to track whether the invitation is pending, accepted, or rejected."
                },
                "$like": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "accepted",
                    "rejected",
                    "revoked",
                    "expired"
                  ],
                  "description": "The status of the chat invitation. This is used to track whether the invitation is pending, accepted, or rejected."
                },
                "$regex": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "accepted",
                    "rejected",
                    "revoked",
                    "expired"
                  ],
                  "description": "The status of the chat invitation. This is used to track whether the invitation is pending, accepted, or rejected."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "accepted",
                    "rejected",
                    "revoked",
                    "expired"
                  ],
                  "description": "The status of the chat invitation. This is used to track whether the invitation is pending, accepted, or rejected."
                },
                "$ne": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "accepted",
                    "rejected",
                    "revoked",
                    "expired"
                  ],
                  "description": "The status of the chat invitation. This is used to track whether the invitation is pending, accepted, or rejected."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "accepted",
                      "rejected",
                      "revoked",
                      "expired"
                    ],
                    "description": "The status of the chat invitation. This is used to track whether the invitation is pending, accepted, or rejected."
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "accepted",
                      "rejected",
                      "revoked",
                      "expired"
                    ],
                    "description": "The status of the chat invitation. This is used to track whether the invitation is pending, accepted, or rejected."
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "createdAt": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "The timestamp when the invitation was created. This is used to track when the invitation was sent."
                },
                "$endsWith": {
                  "type": "string",
                  "description": "The timestamp when the invitation was created. This is used to track when the invitation was sent."
                },
                "$like": {
                  "type": "string",
                  "description": "The timestamp when the invitation was created. This is used to track when the invitation was sent."
                },
                "$regex": {
                  "type": "string",
                  "description": "The timestamp when the invitation was created. This is used to track when the invitation was sent."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "The timestamp when the invitation was created. This is used to track when the invitation was sent."
                },
                "$ne": {
                  "type": "string",
                  "description": "The timestamp when the invitation was created. This is used to track when the invitation was sent."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The timestamp when the invitation was created. This is used to track when the invitation was sent."
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The timestamp when the invitation was created. This is used to track when the invitation was sent."
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "createdBy": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "$startsWith": {
                  "type": "string",
                  "description": "Unique identifier of the user who created the invitation. This is used to track who sent the invitation. It is a foreign key to the User model."
                },
                "$endsWith": {
                  "type": "string",
                  "description": "Unique identifier of the user who created the invitation. This is used to track who sent the invitation. It is a foreign key to the User model."
                },
                "$like": {
                  "type": "string",
                  "description": "Unique identifier of the user who created the invitation. This is used to track who sent the invitation. It is a foreign key to the User model."
                },
                "$regex": {
                  "type": "string",
                  "description": "Unique identifier of the user who created the invitation. This is used to track who sent the invitation. It is a foreign key to the User model."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$eq": {
                  "type": "string",
                  "description": "Unique identifier of the user who created the invitation. This is used to track who sent the invitation. It is a foreign key to the User model."
                },
                "$ne": {
                  "type": "string",
                  "description": "Unique identifier of the user who created the invitation. This is used to track who sent the invitation. It is a foreign key to the User model."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "$in": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Unique identifier of the user who created the invitation. This is used to track who sent the invitation. It is a foreign key to the User model."
                  }
                },
                "$nin": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Unique identifier of the user who created the invitation. This is used to track who sent the invitation. It is a foreign key to the User model."
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        }
      }
    },
    "GetCollectionResult<ChatInvitation>": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number",
          "description": "The Total count of entities"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChatInvitation"
          },
          "description": "List of the selected entities"
        }
      },
      "required": [
        "count",
        "entries"
      ],
      "additionalProperties": false,
      "description": "Response Model for GetCollection"
    },
    "GetEntityEndpoint<ChatInvitation,\"id\">": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {
            "select": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "chatId",
                  "chatName",
                  "message",
                  "userId",
                  "status",
                  "createdAt",
                  "createdBy"
                ]
              },
              "description": "The list of fields to select"
            }
          },
          "additionalProperties": false
        },
        "url": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The entity's unique identifier"
            }
          },
          "required": [
            "id"
          ],
          "additionalProperties": false
        },
        "result": {
          "$ref": "#/definitions/ChatInvitation"
        }
      },
      "required": [
        "query",
        "url",
        "result"
      ],
      "additionalProperties": false,
      "description": "Endpoint model for getting a single entity"
    },
    "PostEndpoint<Chat,\"id\">": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/WithOptionalId%3CChat%2C%22id%22%3E"
        },
        "result": {
          "$ref": "#/definitions/Chat"
        }
      },
      "required": [
        "body",
        "result"
      ],
      "additionalProperties": false,
      "description": "Endpoint model for creating new entities"
    },
    "WithOptionalId<Chat,\"id\">": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier"
        },
        "name": {
          "type": "string",
          "description": "The name of the chat"
        },
        "description": {
          "type": "string",
          "description": "The description in markdown format"
        },
        "createdAt": {
          "type": "string",
          "description": "The date the chat was created"
        },
        "owner": {
          "type": "string",
          "description": "The owner of the chat"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of participants in the chat"
        }
      },
      "required": [
        "createdAt",
        "name",
        "owner",
        "participants"
      ]
    },
    "Omit<Chat,\"id\">": {
      "$ref": "#/definitions/Pick%3CChat%2CExclude%3C(%22id%22%7C%22name%22%7C%22description%22%7C%22createdAt%22%7C%22owner%22%7C%22participants%22)%2C%22id%22%3E%3E"
    },
    "Pick<Chat,Exclude<(\"id\"|\"name\"|\"description\"|\"createdAt\"|\"owner\"|\"participants\"),\"id\">>": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the chat"
        },
        "description": {
          "type": "string",
          "description": "The description in markdown format"
        },
        "createdAt": {
          "type": "string",
          "description": "The date the chat was created"
        },
        "owner": {
          "type": "string",
          "description": "The owner of the chat"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of participants in the chat"
        }
      },
      "required": [
        "name",
        "createdAt",
        "owner",
        "participants"
      ],
      "additionalProperties": false
    },
    "PostEndpoint<ChatMessage,\"id\">": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/WithOptionalId%3CChatMessage%2C%22id%22%3E"
        },
        "result": {
          "$ref": "#/definitions/ChatMessage"
        }
      },
      "required": [
        "body",
        "result"
      ],
      "additionalProperties": false,
      "description": "Endpoint model for creating new entities"
    },
    "WithOptionalId<ChatMessage,\"id\">": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the message"
        },
        "content": {
          "type": "string",
          "description": "The content of the message"
        },
        "createdAt": {
          "type": "string",
          "description": "The date the message was created"
        },
        "owner": {
          "type": "string",
          "description": "The unique identifier of the user who sent the message"
        },
        "chatId": {
          "type": "string",
          "description": "The unique identifier of the chat to which this message belongs"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChatMessageAttachment"
          },
          "description": "The attachments of the message"
        }
      },
      "required": [
        "attachments",
        "chatId",
        "content",
        "createdAt",
        "owner"
      ]
    },
    "Omit<ChatMessage,\"id\">": {
      "$ref": "#/definitions/Pick%3CChatMessage%2CExclude%3C(%22id%22%7C%22content%22%7C%22createdAt%22%7C%22owner%22%7C%22chatId%22%7C%22attachments%22)%2C%22id%22%3E%3E"
    },
    "Pick<ChatMessage,Exclude<(\"id\"|\"content\"|\"createdAt\"|\"owner\"|\"chatId\"|\"attachments\"),\"id\">>": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "The content of the message"
        },
        "createdAt": {
          "type": "string",
          "description": "The date the message was created"
        },
        "owner": {
          "type": "string",
          "description": "The unique identifier of the user who sent the message"
        },
        "chatId": {
          "type": "string",
          "description": "The unique identifier of the chat to which this message belongs"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChatMessageAttachment"
          },
          "description": "The attachments of the message"
        }
      },
      "required": [
        "content",
        "createdAt",
        "owner",
        "chatId",
        "attachments"
      ],
      "additionalProperties": false
    },
    "PostEndpoint<ChatInvitation,\"id\">": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/WithOptionalId%3CChatInvitation%2C%22id%22%3E"
        },
        "result": {
          "$ref": "#/definitions/ChatInvitation"
        }
      },
      "required": [
        "body",
        "result"
      ],
      "additionalProperties": false,
      "description": "Endpoint model for creating new entities"
    },
    "WithOptionalId<ChatInvitation,\"id\">": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the chat invitation. This is used to identify the invitation in the system. It is a primary key in the database. It is also used to reference the invitation in other models."
        },
        "chatId": {
          "type": "string",
          "description": "The foreign key to the chat entity to which this invitation belongs. This is used to associate the invitation with the correct chat. It is a foreign key to the Chat model."
        },
        "chatName": {
          "type": "string",
          "description": "The name of the chat to which the user is invited. This is used to display the chat name in the user interface."
        },
        "message": {
          "type": "string",
          "description": "The message that is sent with the chat invitation. This is used to provide context or information about the invitation. It can include details about the chat or a personal message to the user."
        },
        "userId": {
          "type": "string",
          "description": "The unique identifier of the user who is invited to the chat. This is used to identify the user in the system. It is a foreign key to the User model."
        },
        "status": {
          "type": "string",
          "enum": [
            "pending",
            "accepted",
            "rejected",
            "revoked",
            "expired"
          ],
          "description": "The status of the chat invitation. This is used to track whether the invitation is pending, accepted, or rejected."
        },
        "createdAt": {
          "type": "string",
          "description": "The timestamp when the invitation was created. This is used to track when the invitation was sent."
        },
        "createdBy": {
          "type": "string",
          "description": "Unique identifier of the user who created the invitation. This is used to track who sent the invitation. It is a foreign key to the User model."
        }
      },
      "required": [
        "chatId",
        "chatName",
        "createdAt",
        "createdBy",
        "message",
        "status",
        "userId"
      ]
    },
    "Omit<ChatInvitation,\"id\">": {
      "$ref": "#/definitions/Pick%3CChatInvitation%2CExclude%3C(%22id%22%7C%22chatId%22%7C%22chatName%22%7C%22message%22%7C%22userId%22%7C%22status%22%7C%22createdAt%22%7C%22createdBy%22)%2C%22id%22%3E%3E"
    },
    "Pick<ChatInvitation,Exclude<(\"id\"|\"chatId\"|\"chatName\"|\"message\"|\"userId\"|\"status\"|\"createdAt\"|\"createdBy\"),\"id\">>": {
      "type": "object",
      "properties": {
        "chatId": {
          "type": "string",
          "description": "The foreign key to the chat entity to which this invitation belongs. This is used to associate the invitation with the correct chat. It is a foreign key to the Chat model."
        },
        "chatName": {
          "type": "string",
          "description": "The name of the chat to which the user is invited. This is used to display the chat name in the user interface."
        },
        "message": {
          "type": "string",
          "description": "The message that is sent with the chat invitation. This is used to provide context or information about the invitation. It can include details about the chat or a personal message to the user."
        },
        "userId": {
          "type": "string",
          "description": "The unique identifier of the user who is invited to the chat. This is used to identify the user in the system. It is a foreign key to the User model."
        },
        "status": {
          "type": "string",
          "enum": [
            "pending",
            "accepted",
            "rejected",
            "revoked",
            "expired"
          ],
          "description": "The status of the chat invitation. This is used to track whether the invitation is pending, accepted, or rejected."
        },
        "createdAt": {
          "type": "string",
          "description": "The timestamp when the invitation was created. This is used to track when the invitation was sent."
        },
        "createdBy": {
          "type": "string",
          "description": "Unique identifier of the user who created the invitation. This is used to track who sent the invitation. It is a foreign key to the User model."
        }
      },
      "required": [
        "chatId",
        "chatName",
        "message",
        "userId",
        "status",
        "createdAt",
        "createdBy"
      ],
      "additionalProperties": false
    },
    "PatchEndpoint<Chat,\"id\">": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/Partial%3CChat%3E"
        },
        "url": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique identifier"
            }
          },
          "required": [
            "id"
          ],
          "additionalProperties": false
        },
        "result": {
          "type": "object"
        }
      },
      "required": [
        "body",
        "url",
        "result"
      ],
      "additionalProperties": false,
      "description": "Endpoint model for updating entities"
    },
    "Partial<Chat>": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier"
        },
        "name": {
          "type": "string",
          "description": "The name of the chat"
        },
        "description": {
          "type": "string",
          "description": "The description in markdown format"
        },
        "createdAt": {
          "type": "string",
          "description": "The date the chat was created"
        },
        "owner": {
          "type": "string",
          "description": "The owner of the chat"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of participants in the chat"
        }
      },
      "additionalProperties": false
    },
    "PatchEndpoint<ChatMessage,\"id\">": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/Partial%3CChatMessage%3E"
        },
        "url": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique identifier of the message"
            }
          },
          "required": [
            "id"
          ],
          "additionalProperties": false
        },
        "result": {
          "type": "object"
        }
      },
      "required": [
        "body",
        "url",
        "result"
      ],
      "additionalProperties": false,
      "description": "Endpoint model for updating entities"
    },
    "Partial<ChatMessage>": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the message"
        },
        "content": {
          "type": "string",
          "description": "The content of the message"
        },
        "createdAt": {
          "type": "string",
          "description": "The date the message was created"
        },
        "owner": {
          "type": "string",
          "description": "The unique identifier of the user who sent the message"
        },
        "chatId": {
          "type": "string",
          "description": "The unique identifier of the chat to which this message belongs"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChatMessageAttachment"
          },
          "description": "The attachments of the message"
        }
      },
      "additionalProperties": false
    },
    "PatchEndpoint<ChatInvitation,\"id\">": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/Partial%3CChatInvitation%3E"
        },
        "url": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique identifier of the chat invitation. This is used to identify the invitation in the system. It is a primary key in the database. It is also used to reference the invitation in other models."
            }
          },
          "required": [
            "id"
          ],
          "additionalProperties": false
        },
        "result": {
          "type": "object"
        }
      },
      "required": [
        "body",
        "url",
        "result"
      ],
      "additionalProperties": false,
      "description": "Endpoint model for updating entities"
    },
    "Partial<ChatInvitation>": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the chat invitation. This is used to identify the invitation in the system. It is a primary key in the database. It is also used to reference the invitation in other models."
        },
        "chatId": {
          "type": "string",
          "description": "The foreign key to the chat entity to which this invitation belongs. This is used to associate the invitation with the correct chat. It is a foreign key to the Chat model."
        },
        "chatName": {
          "type": "string",
          "description": "The name of the chat to which the user is invited. This is used to display the chat name in the user interface."
        },
        "message": {
          "type": "string",
          "description": "The message that is sent with the chat invitation. This is used to provide context or information about the invitation. It can include details about the chat or a personal message to the user."
        },
        "userId": {
          "type": "string",
          "description": "The unique identifier of the user who is invited to the chat. This is used to identify the user in the system. It is a foreign key to the User model."
        },
        "status": {
          "type": "string",
          "enum": [
            "pending",
            "accepted",
            "rejected",
            "revoked",
            "expired"
          ],
          "description": "The status of the chat invitation. This is used to track whether the invitation is pending, accepted, or rejected."
        },
        "createdAt": {
          "type": "string",
          "description": "The timestamp when the invitation was created. This is used to track when the invitation was sent."
        },
        "createdBy": {
          "type": "string",
          "description": "Unique identifier of the user who created the invitation. This is used to track who sent the invitation. It is a foreign key to the User model."
        }
      },
      "additionalProperties": false
    },
    "DeleteEndpoint<Chat,\"id\">": {
      "type": "object",
      "properties": {
        "url": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique identifier"
            }
          },
          "required": [
            "id"
          ],
          "additionalProperties": false
        },
        "result": {
          "type": "object"
        }
      },
      "required": [
        "url",
        "result"
      ],
      "additionalProperties": false,
      "description": "Endpoint model for deleting entities"
    },
    "DeleteEndpoint<ChatMessage,\"id\">": {
      "type": "object",
      "properties": {
        "url": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique identifier of the message"
            }
          },
          "required": [
            "id"
          ],
          "additionalProperties": false
        },
        "result": {
          "type": "object"
        }
      },
      "required": [
        "url",
        "result"
      ],
      "additionalProperties": false,
      "description": "Endpoint model for deleting entities"
    }
  }
}